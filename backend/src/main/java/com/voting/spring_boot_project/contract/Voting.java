package com.voting.spring_boot_project.contract;

import io.reactivex.Flowable;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.StaticStruct;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple8;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/LFDT-web3j/web3j/tree/main/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.7.0.
 */
@SuppressWarnings("rawtypes")
public class Voting extends Contract {
    public static final String BINARY = "608060405234801561001057600080fd5b506040516138f13803806138f1833981810160405281019061003291906102fa565b6001808190555060008060006001548152602001908152602001600020905060015481600001819055508381600101908161006d9190610580565b5082816002018190555081816003018190555060008160040160006101000a81548160ff021916908315150217905550604051806020016040528060008152508160050190816100bd9190610580565b50338160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600081600901819055507f0db6f49479669554c6eefe11608543e654d387ff0d23b6b36f365fd261f6a4e06001548560405161013e9291906106ab565b60405180910390a1505050506106db565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6101b68261016d565b810181811067ffffffffffffffff821117156101d5576101d461017e565b5b80604052505050565b60006101e861014f565b90506101f482826101ad565b919050565b600067ffffffffffffffff8211156102145761021361017e565b5b61021d8261016d565b9050602081019050919050565b60005b8381101561024857808201518184015260208101905061022d565b60008484015250505050565b6000610267610262846101f9565b6101de565b90508281526020810184848401111561028357610282610168565b5b61028e84828561022a565b509392505050565b600082601f8301126102ab576102aa610163565b5b81516102bb848260208601610254565b91505092915050565b6000819050919050565b6102d7816102c4565b81146102e257600080fd5b50565b6000815190506102f4816102ce565b92915050565b60008060006060848603121561031357610312610159565b5b600084015167ffffffffffffffff8111156103315761033061015e565b5b61033d86828701610296565b935050602061034e868287016102e5565b925050604061035f868287016102e5565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806103bb57607f821691505b6020821081036103ce576103cd610374565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026104367fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826103f9565b61044086836103f9565b95508019841693508086168417925050509392505050565b6000819050919050565b600061047d610478610473846102c4565b610458565b6102c4565b9050919050565b6000819050919050565b61049783610462565b6104ab6104a382610484565b848454610406565b825550505050565b600090565b6104c06104b3565b6104cb81848461048e565b505050565b5b818110156104ef576104e46000826104b8565b6001810190506104d1565b5050565b601f82111561053457610505816103d4565b61050e846103e9565b8101602085101561051d578190505b610531610529856103e9565b8301826104d0565b50505b505050565b600082821c905092915050565b600061055760001984600802610539565b1980831691505092915050565b60006105708383610546565b9150826002028217905092915050565b61058982610369565b67ffffffffffffffff8111156105a2576105a161017e565b5b6105ac82546103a3565b6105b78282856104f3565b600060209050601f8311600181146105ea57600084156105d8578287015190505b6105e28582610564565b86555061064a565b601f1984166105f8866103d4565b60005b82811015610620578489015182556001820191506020850194506020810190506105fb565b8683101561063d5784890151610639601f891682610546565b8355505b6001600288020188555050505b505050505050565b61065b816102c4565b82525050565b600082825260208201905092915050565b600061067d82610369565b6106878185610661565b935061069781856020860161022a565b6106a08161016d565b840191505092915050565b60006040820190506106c06000830185610652565b81810360208301526106d28184610672565b90509392505050565b613207806106ea6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638f47b1461161008c5780639da69180116100665780639da6918014610272578063aba210091461028e578063d3c9a741146102be578063dc6bfbb5146102da576100ea565b80638f47b146146101f657806394c790bb14610226578063995e433914610242576100ea565b8063283e6b24116100c8578063283e6b24146101435780632ec7d5ae146101735780635c632b381461018f5780638a241f4c146101c6576100ea565b8063051097ef146100ef57806311bb51a41461010b5780631d2cd64414610127575b600080fd5b61010960048036038101906101049190611e07565b6102f8565b005b6101256004803603810190610120919061206a565b6104bb565b005b610141600480360381019061013c919061216f565b610662565b005b61015d600480360381019061015891906121c2565b610a17565b60405161016a919061221d565b60405180910390f35b61018d60048036038101906101889190612238565b610a55565b005b6101a960048036038101906101a49190612238565b610e2b565b6040516101bd989796959493929190612302565b60405180910390f35b6101e060048036038101906101db9190612238565b610fb0565b6040516101ed919061244c565b60405180910390f35b610210600480360381019061020b919061246e565b611159565b60405161021d9190612521565b60405180910390f35b610240600480360381019061023b919061246e565b611210565b005b61025c60048036038101906102579190612238565b6114f2565b604051610269919061253c565b60405180910390f35b61028c600480360381019061028791906121c2565b61166d565b005b6102a860048036038101906102a3919061255e565b611a64565b6040516102b59190612638565b60405180910390f35b6102d860048036038101906102d39190612238565b611b4b565b005b6102e2611c21565b6040516102ef919061265a565b60405180910390f35b8160008082815260200190815260200160002060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461039c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610393906126e7565b60405180910390fd5b8260008060008381526020019081526020016000209050806002015442106103f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f090612753565b60405180910390fd5b60008060008781526020019081526020016000209050600080600088815260200190815260200160002060090154905060405180606001604052808281526020018781526020016000815250600080898152602001908152602001600020600801600083815260200190815260200160002060008201518160000155602082015181600101908161048a919061297f565b50604082015181600201559050508160090160008154809291906104ad90612a80565b919050555050505050505050565b6000600160008154809291906104d090612a80565b9190505590506000806000838152602001908152602001600020905081816000018190555086816001019081610506919061297f565b5085816002018190555084816003018190555060008160040160006101000a81548160ff02191690831515021790555060405180602001604052806000815250816005019081610556919061297f565b50338160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000816009018190555060005b84518110156105e1576105d4838683815181106105c7576105c6612ac8565b5b60200260200101516102f8565b80806001019150506105a7565b5060005b835181101561061f576106128385838151811061060557610604612ac8565b5b6020026020010151611210565b80806001019150506105e5565b507f0db6f49479669554c6eefe11608543e654d387ff0d23b6b36f365fd261f6a4e08288604051610651929190612af7565b60405180910390a150505050505050565b82600080600083815260200190815260200160002090508060030154816002015461068d9190612b27565b4210156106cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c690612ba7565b60405180910390fd5b8460008082815260200190815260200160002060040160009054906101000a900460ff1615610733576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072a90612c13565b60405180910390fd5b60008087815260200190815260200160002060070160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff166107d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cc90612ca5565b60405180910390fd5b84846040516020016107e8929190612d07565b6040516020818303038152906040528051906020012060008088815260200190815260200160002060070160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015414610894576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088b90612d7f565b60405180910390fd5b600085856040516020016108a9929190612d07565b604051602081830303815290604052805190602001209050600080888152602001908152602001600020600a01600082815260200190815260200160002060009054906101000a900460ff16610934576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092b90612deb565b60405180910390fd5b8560008089815260200190815260200160002060070160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506001600080898152602001908152602001600020600801600088815260200190815260200160002060020160008282546109c89190612b27565b925050819055506000806000898152602001908152602001600020600a01600083815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050505050565b6000806000848152602001908152602001600020600a01600083815260200190815260200160002060009054906101000a900460ff16905092915050565b8060008082815260200190815260200160002060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610af9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af0906126e7565b60405180910390fd5b816000806000838152602001908152602001600020905080600301548160020154610b249190612b27565b421015610b66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5d90612ba7565b60405180910390fd5b8360008082815260200190815260200160002060040160009054906101000a900460ff1615610bca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc190612c13565b60405180910390fd5b60008080600088815260200190815260200160002060090154905060008167ffffffffffffffff811115610c0157610c00611cdc565b5b604051908082528060200260200182016040528015610c2f5781602001602082028036833780820191505090505b5090506000606060005b84811015610d3557856000808d81526020019081526020016000206008016000838152602001908152602001600020600201541115610cc8576000808c815260200190815260200160002060080160008281526020019081526020016000206002015495508084600081518110610cb357610cb2612ac8565b5b60200260200101818152505060019250610d28565b856000808d815260200190815260200160002060080160008381526020019081526020016000206002015403610d275780848481518110610d0c57610d0b612ac8565b5b6020026020010181815250508280610d2390612a80565b9350505b5b8080600101915050610c39565b506040518060600160405280602181526020016131b160219139905060005b82811015610dfb576000811115610d885781604051602001610d769190612e93565b60405160208183030381529060405291505b816000808d81526020019081526020016000206008016000868481518110610db357610db2612ac8565b5b60200260200101518152602001908152602001600020600101604051602001610ddd929190612f38565b60405160208183030381529060405291508080600101915050610d54565b50806000808c81526020019081526020016000206005019081610e1e919061297f565b5050505050505050505050565b6000602052806000526040600020600091509050806000015490806001018054610e54906127a2565b80601f0160208091040260200160405190810160405280929190818152602001828054610e80906127a2565b8015610ecd5780601f10610ea257610100808354040283529160200191610ecd565b820191906000526020600020905b815481529060010190602001808311610eb057829003601f168201915b5050505050908060020154908060030154908060040160009054906101000a900460ff1690806005018054610f01906127a2565b80601f0160208091040260200160405190810160405280929190818152602001828054610f2d906127a2565b8015610f7a5780601f10610f4f57610100808354040283529160200191610f7a565b820191906000526020600020905b815481529060010190602001808311610f5d57829003601f168201915b5050505050908060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060090154905088565b6060816000806000838152602001908152602001600020905080600301548160020154610fdd9190612b27565b42101561101f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101690612ba7565b60405180910390fd5b8360008082815260200190815260200160002060040160009054906101000a900460ff1615611083576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107a90612c13565b60405180910390fd5b600080600087815260200190815260200160002060090154905060008167ffffffffffffffff8111156110b9576110b8611cdc565b5b6040519080825280602002602001820160405280156110e75781602001602082028036833780820191505090505b50905060005b8281101561114b5760008089815260200190815260200160002060080160008281526020019081526020016000206002015482828151811061113257611131612ac8565b5b60200260200101818152505080806001019150506110ed565b508095505050505050919050565b611161611c27565b60008084815260200190815260200160002060070160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff1615151515815260200160018201548152602001600282015481525050905092915050565b8160008082815260200190815260200160002060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ab906126e7565b60405180910390fd5b826000806000838152602001908152602001600020905080600201544210611311576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130890612753565b60405180910390fd5b60008086815260200190815260200160002060070160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16156113b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ab90612fa8565b60405180910390fd5b600160008087815260200190815260200160002060070160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908315150217905550600080600087815260200190815260200160002060070160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff021916908315150217905550600080600087815260200190815260200160002060070160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505050505050565b606081600080600083815260200190815260200160002090508060030154816002015461151f9190612b27565b421015611561576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155890612ba7565b60405180910390fd5b8360008082815260200190815260200160002060040160009054906101000a900460ff16156115c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115bc90612c13565b60405180910390fd5b60008086815260200190815260200160002060050180546115e5906127a2565b80601f0160208091040260200160405190810160405280929190818152602001828054611611906127a2565b801561165e5780601f106116335761010080835404028352916020019161165e565b820191906000526020600020905b81548152906001019060200180831161164157829003601f168201915b50505050509350505050919050565b8160008060008381526020019081526020016000209050806002015442101580156116aa5750806003015481600201546116a79190612b27565b42105b6116e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e090613014565b60405180910390fd5b8360008082815260200190815260200160002060040160009054906101000a900460ff161561174d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161174490612c13565b60405180910390fd5b60008086815260200190815260200160002060070160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166117ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117e690613080565b60405180910390fd5b60008086815260200190815260200160002060070160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff1615611892576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611889906130ec565b60405180910390fd5b600080868152602001908152602001600020600a01600085815260200190815260200160002060009054906101000a900460ff1615611906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118fd90613158565b60405180910390fd5b600160008087815260200190815260200160002060070160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff0219169083151502179055508360008087815260200190815260200160002060070160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506001600080878152602001908152602001600020600a01600086815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167fcf29080ea99186dc8baaa2e6a6f711231d23e011039d240408cc5196ea3de70c8686604051611a55929190613187565b60405180910390a25050505050565b611a6c611c56565b600080848152602001908152602001600020600801600083815260200190815260200160002060405180606001604052908160008201548152602001600182018054611ab7906127a2565b80601f0160208091040260200160405190810160405280929190818152602001828054611ae3906127a2565b8015611b305780601f10611b0557610100808354040283529160200191611b30565b820191906000526020600020905b815481529060010190602001808311611b1357829003601f168201915b50505050508152602001600282015481525050905092915050565b8060008082815260200190815260200160002060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611bef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611be6906126e7565b60405180910390fd5b600160008084815260200190815260200160002060040160006101000a81548160ff0219169083151502179055505050565b60015481565b604051806080016040528060001515815260200160001515815260200160008152602001600080191681525090565b60405180606001604052806000815260200160608152602001600081525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b611c9e81611c8b565b8114611ca957600080fd5b50565b600081359050611cbb81611c95565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611d1482611ccb565b810181811067ffffffffffffffff82111715611d3357611d32611cdc565b5b80604052505050565b6000611d46611c77565b9050611d528282611d0b565b919050565b600067ffffffffffffffff821115611d7257611d71611cdc565b5b611d7b82611ccb565b9050602081019050919050565b82818337600083830152505050565b6000611daa611da584611d57565b611d3c565b905082815260208101848484011115611dc657611dc5611cc6565b5b611dd1848285611d88565b509392505050565b600082601f830112611dee57611ded611cc1565b5b8135611dfe848260208601611d97565b91505092915050565b60008060408385031215611e1e57611e1d611c81565b5b6000611e2c85828601611cac565b925050602083013567ffffffffffffffff811115611e4d57611e4c611c86565b5b611e5985828601611dd9565b9150509250929050565b600067ffffffffffffffff821115611e7e57611e7d611cdc565b5b602082029050602081019050919050565b600080fd5b6000611ea7611ea284611e63565b611d3c565b90508083825260208201905060208402830185811115611eca57611ec9611e8f565b5b835b81811015611f1157803567ffffffffffffffff811115611eef57611eee611cc1565b5b808601611efc8982611dd9565b85526020850194505050602081019050611ecc565b5050509392505050565b600082601f830112611f3057611f2f611cc1565b5b8135611f40848260208601611e94565b91505092915050565b600067ffffffffffffffff821115611f6457611f63611cdc565b5b602082029050602081019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611fa082611f75565b9050919050565b611fb081611f95565b8114611fbb57600080fd5b50565b600081359050611fcd81611fa7565b92915050565b6000611fe6611fe184611f49565b611d3c565b9050808382526020820190506020840283018581111561200957612008611e8f565b5b835b81811015612032578061201e8882611fbe565b84526020840193505060208101905061200b565b5050509392505050565b600082601f83011261205157612050611cc1565b5b8135612061848260208601611fd3565b91505092915050565b600080600080600060a0868803121561208657612085611c81565b5b600086013567ffffffffffffffff8111156120a4576120a3611c86565b5b6120b088828901611dd9565b95505060206120c188828901611cac565b94505060406120d288828901611cac565b935050606086013567ffffffffffffffff8111156120f3576120f2611c86565b5b6120ff88828901611f1b565b925050608086013567ffffffffffffffff8111156121205761211f611c86565b5b61212c8882890161203c565b9150509295509295909350565b6000819050919050565b61214c81612139565b811461215757600080fd5b50565b60008135905061216981612143565b92915050565b60008060006060848603121561218857612187611c81565b5b600061219686828701611cac565b93505060206121a786828701611cac565b92505060406121b88682870161215a565b9150509250925092565b600080604083850312156121d9576121d8611c81565b5b60006121e785828601611cac565b92505060206121f88582860161215a565b9150509250929050565b60008115159050919050565b61221781612202565b82525050565b6000602082019050612232600083018461220e565b92915050565b60006020828403121561224e5761224d611c81565b5b600061225c84828501611cac565b91505092915050565b61226e81611c8b565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156122ae578082015181840152602081019050612293565b60008484015250505050565b60006122c582612274565b6122cf818561227f565b93506122df818560208601612290565b6122e881611ccb565b840191505092915050565b6122fc81611f95565b82525050565b600061010082019050612318600083018b612265565b818103602083015261232a818a6122ba565b90506123396040830189612265565b6123466060830188612265565b612353608083018761220e565b81810360a083015261236581866122ba565b905061237460c08301856122f3565b61238160e0830184612265565b9998505050505050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6123c381611c8b565b82525050565b60006123d583836123ba565b60208301905092915050565b6000602082019050919050565b60006123f98261238e565b6124038185612399565b935061240e836123aa565b8060005b8381101561243f57815161242688826123c9565b9750612431836123e1565b925050600181019050612412565b5085935050505092915050565b6000602082019050818103600083015261246681846123ee565b905092915050565b6000806040838503121561248557612484611c81565b5b600061249385828601611cac565b92505060206124a485828601611fbe565b9150509250929050565b6124b781612202565b82525050565b6124c681612139565b82525050565b6080820160008201516124e260008501826124ae565b5060208201516124f560208501826124ae565b50604082015161250860408501826123ba565b50606082015161251b60608501826124bd565b50505050565b600060808201905061253660008301846124cc565b92915050565b6000602082019050818103600083015261255681846122ba565b905092915050565b6000806040838503121561257557612574611c81565b5b600061258385828601611cac565b925050602061259485828601611cac565b9150509250929050565b600082825260208201905092915050565b60006125ba82612274565b6125c4818561259e565b93506125d4818560208601612290565b6125dd81611ccb565b840191505092915050565b600060608301600083015161260060008601826123ba565b506020830151848203602086015261261882826125af565b915050604083015161262d60408601826123ba565b508091505092915050565b6000602082019050818103600083015261265281846125e8565b905092915050565b600060208201905061266f6000830184612265565b92915050565b7f4f6e6c792061646d696e2063616e20706572666f726d2074686973206163746960008201527f6f6e000000000000000000000000000000000000000000000000000000000000602082015250565b60006126d160228361227f565b91506126dc82612675565b604082019050919050565b60006020820190508181036000830152612700816126c4565b9050919050565b7f566f74696e672068617320616c72656164792073746172746564000000000000600082015250565b600061273d601a8361227f565b915061274882612707565b602082019050919050565b6000602082019050818103600083015261276c81612730565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806127ba57607f821691505b6020821081036127cd576127cc612773565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026128357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826127f8565b61283f86836127f8565b95508019841693508086168417925050509392505050565b6000819050919050565b600061287c61287761287284611c8b565b612857565b611c8b565b9050919050565b6000819050919050565b61289683612861565b6128aa6128a282612883565b848454612805565b825550505050565b600090565b6128bf6128b2565b6128ca81848461288d565b505050565b5b818110156128ee576128e36000826128b7565b6001810190506128d0565b5050565b601f82111561293357612904816127d3565b61290d846127e8565b8101602085101561291c578190505b612930612928856127e8565b8301826128cf565b50505b505050565b600082821c905092915050565b600061295660001984600802612938565b1980831691505092915050565b600061296f8383612945565b9150826002028217905092915050565b61298882612274565b67ffffffffffffffff8111156129a1576129a0611cdc565b5b6129ab82546127a2565b6129b68282856128f2565b600060209050601f8311600181146129e957600084156129d7578287015190505b6129e18582612963565b865550612a49565b601f1984166129f7866127d3565b60005b82811015612a1f578489015182556001820191506020850194506020810190506129fa565b86831015612a3c5784890151612a38601f891682612945565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612a8b82611c8b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612abd57612abc612a51565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000604082019050612b0c6000830185612265565b8181036020830152612b1e81846122ba565b90509392505050565b6000612b3282611c8b565b9150612b3d83611c8b565b9250828201905080821115612b5557612b54612a51565b5b92915050565b7f566f74696e6720706572696f6420686173206e6f7420656e6465642079657400600082015250565b6000612b91601f8361227f565b9150612b9c82612b5b565b602082019050919050565b60006020820190508181036000830152612bc081612b84565b9050919050565b7f566f74696e67206973207465726d696e61746564000000000000000000000000600082015250565b6000612bfd60148361227f565b9150612c0882612bc7565b602082019050919050565b60006020820190508181036000830152612c2c81612bf0565b9050919050565b7f596f752068617665206e6f7420636f6d6d6974746564206120766f746520796560008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b6000612c8f60218361227f565b9150612c9a82612c33565b604082019050919050565b60006020820190508181036000830152612cbe81612c82565b9050919050565b6000819050919050565b612ce0612cdb82611c8b565b612cc5565b82525050565b6000819050919050565b612d01612cfc82612139565b612ce6565b82525050565b6000612d138285612ccf565b602082019150612d238284612cf0565b6020820191508190509392505050565b7f496e76616c696420766f74652072657665616c00000000000000000000000000600082015250565b6000612d6960138361227f565b9150612d7482612d33565b602082019050919050565b60006020820190508181036000830152612d9881612d5c565b9050919050565b7f496e76616c696420636f6d6d69746d656e740000000000000000000000000000600082015250565b6000612dd560128361227f565b9150612de082612d9f565b602082019050919050565b60006020820190508181036000830152612e0481612dc8565b9050919050565b600081905092915050565b6000612e2182612274565b612e2b8185612e0b565b9350612e3b818560208601612290565b80840191505092915050565b7f2c20000000000000000000000000000000000000000000000000000000000000600082015250565b6000612e7d600283612e0b565b9150612e8882612e47565b600282019050919050565b6000612e9f8284612e16565b9150612eaa82612e70565b915081905092915050565b60008154612ec2816127a2565b612ecc8186612e0b565b94506001821660008114612ee75760018114612efc57612f2f565b60ff1983168652811515820286019350612f2f565b612f05856127d3565b60005b83811015612f2757815481890152600182019150602081019050612f08565b838801955050505b50505092915050565b6000612f448285612e16565b9150612f508284612eb5565b91508190509392505050565b7f566f74657220697320616c726561647920726567697374657265640000000000600082015250565b6000612f92601b8361227f565b9150612f9d82612f5c565b602082019050919050565b60006020820190508181036000830152612fc181612f85565b9050919050565b7f566f74696e67206973206e6f7420616374697665000000000000000000000000600082015250565b6000612ffe60148361227f565b915061300982612fc8565b602082019050919050565b6000602082019050818103600083015261302d81612ff1565b9050919050565b7f596f75206d757374206265207265676973746572656420746f20766f74650000600082015250565b600061306a601e8361227f565b915061307582613034565b602082019050919050565b600060208201905081810360008301526130998161305d565b9050919050565b7f596f75206861766520616c726561647920766f74656400000000000000000000600082015250565b60006130d660168361227f565b91506130e1826130a0565b602082019050919050565b60006020820190508181036000830152613105816130c9565b9050919050565b7f436f6d6d69746d656e7420616c72656164792065786973747300000000000000600082015250565b600061314260198361227f565b915061314d8261310c565b602082019050919050565b6000602082019050818103600083015261317181613135565b9050919050565b61318181612139565b82525050565b600060408201905061319c6000830185612265565b6131a96020830184613178565b939250505056fe50726f706f73616c287329207769746820746865206d6f737420766f7465733a20a2646970667358221220f47f76060a9688bef094dd34fe87e2cba34550623f1d63a59fbfc3e63d0f58a864736f6c634300081c0033\",\r\n"
            + "  \"deployedBytecode\": \"0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638f47b1461161008c5780639da69180116100665780639da6918014610272578063aba210091461028e578063d3c9a741146102be578063dc6bfbb5146102da576100ea565b80638f47b146146101f657806394c790bb14610226578063995e433914610242576100ea565b8063283e6b24116100c8578063283e6b24146101435780632ec7d5ae146101735780635c632b381461018f5780638a241f4c146101c6576100ea565b8063051097ef146100ef57806311bb51a41461010b5780631d2cd64414610127575b600080fd5b61010960048036038101906101049190611e07565b6102f8565b005b6101256004803603810190610120919061206a565b6104bb565b005b610141600480360381019061013c919061216f565b610662565b005b61015d600480360381019061015891906121c2565b610a17565b60405161016a919061221d565b60405180910390f35b61018d60048036038101906101889190612238565b610a55565b005b6101a960048036038101906101a49190612238565b610e2b565b6040516101bd989796959493929190612302565b60405180910390f35b6101e060048036038101906101db9190612238565b610fb0565b6040516101ed919061244c565b60405180910390f35b610210600480360381019061020b919061246e565b611159565b60405161021d9190612521565b60405180910390f35b610240600480360381019061023b919061246e565b611210565b005b61025c60048036038101906102579190612238565b6114f2565b604051610269919061253c565b60405180910390f35b61028c600480360381019061028791906121c2565b61166d565b005b6102a860048036038101906102a3919061255e565b611a64565b6040516102b59190612638565b60405180910390f35b6102d860048036038101906102d39190612238565b611b4b565b005b6102e2611c21565b6040516102ef919061265a565b60405180910390f35b8160008082815260200190815260200160002060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461039c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610393906126e7565b60405180910390fd5b8260008060008381526020019081526020016000209050806002015442106103f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f090612753565b60405180910390fd5b60008060008781526020019081526020016000209050600080600088815260200190815260200160002060090154905060405180606001604052808281526020018781526020016000815250600080898152602001908152602001600020600801600083815260200190815260200160002060008201518160000155602082015181600101908161048a919061297f565b50604082015181600201559050508160090160008154809291906104ad90612a80565b919050555050505050505050565b6000600160008154809291906104d090612a80565b9190505590506000806000838152602001908152602001600020905081816000018190555086816001019081610506919061297f565b5085816002018190555084816003018190555060008160040160006101000a81548160ff02191690831515021790555060405180602001604052806000815250816005019081610556919061297f565b50338160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000816009018190555060005b84518110156105e1576105d4838683815181106105c7576105c6612ac8565b5b60200260200101516102f8565b80806001019150506105a7565b5060005b835181101561061f576106128385838151811061060557610604612ac8565b5b6020026020010151611210565b80806001019150506105e5565b507f0db6f49479669554c6eefe11608543e654d387ff0d23b6b36f365fd261f6a4e08288604051610651929190612af7565b60405180910390a150505050505050565b82600080600083815260200190815260200160002090508060030154816002015461068d9190612b27565b4210156106cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c690612ba7565b60405180910390fd5b8460008082815260200190815260200160002060040160009054906101000a900460ff1615610733576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072a90612c13565b60405180910390fd5b60008087815260200190815260200160002060070160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff166107d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cc90612ca5565b60405180910390fd5b84846040516020016107e8929190612d07565b6040516020818303038152906040528051906020012060008088815260200190815260200160002060070160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015414610894576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088b90612d7f565b60405180910390fd5b600085856040516020016108a9929190612d07565b604051602081830303815290604052805190602001209050600080888152602001908152602001600020600a01600082815260200190815260200160002060009054906101000a900460ff16610934576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092b90612deb565b60405180910390fd5b8560008089815260200190815260200160002060070160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506001600080898152602001908152602001600020600801600088815260200190815260200160002060020160008282546109c89190612b27565b925050819055506000806000898152602001908152602001600020600a01600083815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050505050565b6000806000848152602001908152602001600020600a01600083815260200190815260200160002060009054906101000a900460ff16905092915050565b8060008082815260200190815260200160002060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610af9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af0906126e7565b60405180910390fd5b816000806000838152602001908152602001600020905080600301548160020154610b249190612b27565b421015610b66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5d90612ba7565b60405180910390fd5b8360008082815260200190815260200160002060040160009054906101000a900460ff1615610bca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc190612c13565b60405180910390fd5b60008080600088815260200190815260200160002060090154905060008167ffffffffffffffff811115610c0157610c00611cdc565b5b604051908082528060200260200182016040528015610c2f5781602001602082028036833780820191505090505b5090506000606060005b84811015610d3557856000808d81526020019081526020016000206008016000838152602001908152602001600020600201541115610cc8576000808c815260200190815260200160002060080160008281526020019081526020016000206002015495508084600081518110610cb357610cb2612ac8565b5b60200260200101818152505060019250610d28565b856000808d815260200190815260200160002060080160008381526020019081526020016000206002015403610d275780848481518110610d0c57610d0b612ac8565b5b6020026020010181815250508280610d2390612a80565b9350505b5b8080600101915050610c39565b506040518060600160405280602181526020016131b160219139905060005b82811015610dfb576000811115610d885781604051602001610d769190612e93565b60405160208183030381529060405291505b816000808d81526020019081526020016000206008016000868481518110610db357610db2612ac8565b5b60200260200101518152602001908152602001600020600101604051602001610ddd929190612f38565b60405160208183030381529060405291508080600101915050610d54565b50806000808c81526020019081526020016000206005019081610e1e919061297f565b5050505050505050505050565b6000602052806000526040600020600091509050806000015490806001018054610e54906127a2565b80601f0160208091040260200160405190810160405280929190818152602001828054610e80906127a2565b8015610ecd5780601f10610ea257610100808354040283529160200191610ecd565b820191906000526020600020905b815481529060010190602001808311610eb057829003601f168201915b5050505050908060020154908060030154908060040160009054906101000a900460ff1690806005018054610f01906127a2565b80601f0160208091040260200160405190810160405280929190818152602001828054610f2d906127a2565b8015610f7a5780601f10610f4f57610100808354040283529160200191610f7a565b820191906000526020600020905b815481529060010190602001808311610f5d57829003601f168201915b5050505050908060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060090154905088565b6060816000806000838152602001908152602001600020905080600301548160020154610fdd9190612b27565b42101561101f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101690612ba7565b60405180910390fd5b8360008082815260200190815260200160002060040160009054906101000a900460ff1615611083576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107a90612c13565b60405180910390fd5b600080600087815260200190815260200160002060090154905060008167ffffffffffffffff8111156110b9576110b8611cdc565b5b6040519080825280602002602001820160405280156110e75781602001602082028036833780820191505090505b50905060005b8281101561114b5760008089815260200190815260200160002060080160008281526020019081526020016000206002015482828151811061113257611131612ac8565b5b60200260200101818152505080806001019150506110ed565b508095505050505050919050565b611161611c27565b60008084815260200190815260200160002060070160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff1615151515815260200160018201548152602001600282015481525050905092915050565b8160008082815260200190815260200160002060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ab906126e7565b60405180910390fd5b826000806000838152602001908152602001600020905080600201544210611311576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130890612753565b60405180910390fd5b60008086815260200190815260200160002060070160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16156113b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ab90612fa8565b60405180910390fd5b600160008087815260200190815260200160002060070160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908315150217905550600080600087815260200190815260200160002060070160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff021916908315150217905550600080600087815260200190815260200160002060070160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505050505050565b606081600080600083815260200190815260200160002090508060030154816002015461151f9190612b27565b421015611561576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155890612ba7565b60405180910390fd5b8360008082815260200190815260200160002060040160009054906101000a900460ff16156115c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115bc90612c13565b60405180910390fd5b60008086815260200190815260200160002060050180546115e5906127a2565b80601f0160208091040260200160405190810160405280929190818152602001828054611611906127a2565b801561165e5780601f106116335761010080835404028352916020019161165e565b820191906000526020600020905b81548152906001019060200180831161164157829003601f168201915b50505050509350505050919050565b8160008060008381526020019081526020016000209050806002015442101580156116aa5750806003015481600201546116a79190612b27565b42105b6116e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e090613014565b60405180910390fd5b8360008082815260200190815260200160002060040160009054906101000a900460ff161561174d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161174490612c13565b60405180910390fd5b60008086815260200190815260200160002060070160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166117ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117e690613080565b60405180910390fd5b60008086815260200190815260200160002060070160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff1615611892576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611889906130ec565b60405180910390fd5b600080868152602001908152602001600020600a01600085815260200190815260200160002060009054906101000a900460ff1615611906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118fd90613158565b60405180910390fd5b600160008087815260200190815260200160002060070160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff0219169083151502179055508360008087815260200190815260200160002060070160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506001600080878152602001908152602001600020600a01600086815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167fcf29080ea99186dc8baaa2e6a6f711231d23e011039d240408cc5196ea3de70c8686604051611a55929190613187565b60405180910390a25050505050565b611a6c611c56565b600080848152602001908152602001600020600801600083815260200190815260200160002060405180606001604052908160008201548152602001600182018054611ab7906127a2565b80601f0160208091040260200160405190810160405280929190818152602001828054611ae3906127a2565b8015611b305780601f10611b0557610100808354040283529160200191611b30565b820191906000526020600020905b815481529060010190602001808311611b1357829003601f168201915b50505050508152602001600282015481525050905092915050565b8060008082815260200190815260200160002060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611bef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611be6906126e7565b60405180910390fd5b600160008084815260200190815260200160002060040160006101000a81548160ff0219169083151502179055505050565b60015481565b604051806080016040528060001515815260200160001515815260200160008152602001600080191681525090565b60405180606001604052806000815260200160608152602001600081525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b611c9e81611c8b565b8114611ca957600080fd5b50565b600081359050611cbb81611c95565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611d1482611ccb565b810181811067ffffffffffffffff82111715611d3357611d32611cdc565b5b80604052505050565b6000611d46611c77565b9050611d528282611d0b565b919050565b600067ffffffffffffffff821115611d7257611d71611cdc565b5b611d7b82611ccb565b9050602081019050919050565b82818337600083830152505050565b6000611daa611da584611d57565b611d3c565b905082815260208101848484011115611dc657611dc5611cc6565b5b611dd1848285611d88565b509392505050565b600082601f830112611dee57611ded611cc1565b5b8135611dfe848260208601611d97565b91505092915050565b60008060408385031215611e1e57611e1d611c81565b5b6000611e2c85828601611cac565b925050602083013567ffffffffffffffff811115611e4d57611e4c611c86565b5b611e5985828601611dd9565b9150509250929050565b600067ffffffffffffffff821115611e7e57611e7d611cdc565b5b602082029050602081019050919050565b600080fd5b6000611ea7611ea284611e63565b611d3c565b90508083825260208201905060208402830185811115611eca57611ec9611e8f565b5b835b81811015611f1157803567ffffffffffffffff811115611eef57611eee611cc1565b5b808601611efc8982611dd9565b85526020850194505050602081019050611ecc565b5050509392505050565b600082601f830112611f3057611f2f611cc1565b5b8135611f40848260208601611e94565b91505092915050565b600067ffffffffffffffff821115611f6457611f63611cdc565b5b602082029050602081019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611fa082611f75565b9050919050565b611fb081611f95565b8114611fbb57600080fd5b50565b600081359050611fcd81611fa7565b92915050565b6000611fe6611fe184611f49565b611d3c565b9050808382526020820190506020840283018581111561200957612008611e8f565b5b835b81811015612032578061201e8882611fbe565b84526020840193505060208101905061200b565b5050509392505050565b600082601f83011261205157612050611cc1565b5b8135612061848260208601611fd3565b91505092915050565b600080600080600060a0868803121561208657612085611c81565b5b600086013567ffffffffffffffff8111156120a4576120a3611c86565b5b6120b088828901611dd9565b95505060206120c188828901611cac565b94505060406120d288828901611cac565b935050606086013567ffffffffffffffff8111156120f3576120f2611c86565b5b6120ff88828901611f1b565b925050608086013567ffffffffffffffff8111156121205761211f611c86565b5b61212c8882890161203c565b9150509295509295909350565b6000819050919050565b61214c81612139565b811461215757600080fd5b50565b60008135905061216981612143565b92915050565b60008060006060848603121561218857612187611c81565b5b600061219686828701611cac565b93505060206121a786828701611cac565b92505060406121b88682870161215a565b9150509250925092565b600080604083850312156121d9576121d8611c81565b5b60006121e785828601611cac565b92505060206121f88582860161215a565b9150509250929050565b60008115159050919050565b61221781612202565b82525050565b6000602082019050612232600083018461220e565b92915050565b60006020828403121561224e5761224d611c81565b5b600061225c84828501611cac565b91505092915050565b61226e81611c8b565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156122ae578082015181840152602081019050612293565b60008484015250505050565b60006122c582612274565b6122cf818561227f565b93506122df818560208601612290565b6122e881611ccb565b840191505092915050565b6122fc81611f95565b82525050565b600061010082019050612318600083018b612265565b818103602083015261232a818a6122ba565b90506123396040830189612265565b6123466060830188612265565b612353608083018761220e565b81810360a083015261236581866122ba565b905061237460c08301856122f3565b61238160e0830184612265565b9998505050505050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6123c381611c8b565b82525050565b60006123d583836123ba565b60208301905092915050565b6000602082019050919050565b60006123f98261238e565b6124038185612399565b935061240e836123aa565b8060005b8381101561243f57815161242688826123c9565b9750612431836123e1565b925050600181019050612412565b5085935050505092915050565b6000602082019050818103600083015261246681846123ee565b905092915050565b6000806040838503121561248557612484611c81565b5b600061249385828601611cac565b92505060206124a485828601611fbe565b9150509250929050565b6124b781612202565b82525050565b6124c681612139565b82525050565b6080820160008201516124e260008501826124ae565b5060208201516124f560208501826124ae565b50604082015161250860408501826123ba565b50606082015161251b60608501826124bd565b50505050565b600060808201905061253660008301846124cc565b92915050565b6000602082019050818103600083015261255681846122ba565b905092915050565b6000806040838503121561257557612574611c81565b5b600061258385828601611cac565b925050602061259485828601611cac565b9150509250929050565b600082825260208201905092915050565b60006125ba82612274565b6125c4818561259e565b93506125d4818560208601612290565b6125dd81611ccb565b840191505092915050565b600060608301600083015161260060008601826123ba565b506020830151848203602086015261261882826125af565b915050604083015161262d60408601826123ba565b508091505092915050565b6000602082019050818103600083015261265281846125e8565b905092915050565b600060208201905061266f6000830184612265565b92915050565b7f4f6e6c792061646d696e2063616e20706572666f726d2074686973206163746960008201527f6f6e000000000000000000000000000000000000000000000000000000000000602082015250565b60006126d160228361227f565b91506126dc82612675565b604082019050919050565b60006020820190508181036000830152612700816126c4565b9050919050565b7f566f74696e672068617320616c72656164792073746172746564000000000000600082015250565b600061273d601a8361227f565b915061274882612707565b602082019050919050565b6000602082019050818103600083015261276c81612730565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806127ba57607f821691505b6020821081036127cd576127cc612773565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026128357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826127f8565b61283f86836127f8565b95508019841693508086168417925050509392505050565b6000819050919050565b600061287c61287761287284611c8b565b612857565b611c8b565b9050919050565b6000819050919050565b61289683612861565b6128aa6128a282612883565b848454612805565b825550505050565b600090565b6128bf6128b2565b6128ca81848461288d565b505050565b5b818110156128ee576128e36000826128b7565b6001810190506128d0565b5050565b601f82111561293357612904816127d3565b61290d846127e8565b8101602085101561291c578190505b612930612928856127e8565b8301826128cf565b50505b505050565b600082821c905092915050565b600061295660001984600802612938565b1980831691505092915050565b600061296f8383612945565b9150826002028217905092915050565b61298882612274565b67ffffffffffffffff8111156129a1576129a0611cdc565b5b6129ab82546127a2565b6129b68282856128f2565b600060209050601f8311600181146129e957600084156129d7578287015190505b6129e18582612963565b865550612a49565b601f1984166129f7866127d3565b60005b82811015612a1f578489015182556001820191506020850194506020810190506129fa565b86831015612a3c5784890151612a38601f891682612945565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612a8b82611c8b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612abd57612abc612a51565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000604082019050612b0c6000830185612265565b8181036020830152612b1e81846122ba565b90509392505050565b6000612b3282611c8b565b9150612b3d83611c8b565b9250828201905080821115612b5557612b54612a51565b5b92915050565b7f566f74696e6720706572696f6420686173206e6f7420656e6465642079657400600082015250565b6000612b91601f8361227f565b9150612b9c82612b5b565b602082019050919050565b60006020820190508181036000830152612bc081612b84565b9050919050565b7f566f74696e67206973207465726d696e61746564000000000000000000000000600082015250565b6000612bfd60148361227f565b9150612c0882612bc7565b602082019050919050565b60006020820190508181036000830152612c2c81612bf0565b9050919050565b7f596f752068617665206e6f7420636f6d6d6974746564206120766f746520796560008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b6000612c8f60218361227f565b9150612c9a82612c33565b604082019050919050565b60006020820190508181036000830152612cbe81612c82565b9050919050565b6000819050919050565b612ce0612cdb82611c8b565b612cc5565b82525050565b6000819050919050565b612d01612cfc82612139565b612ce6565b82525050565b6000612d138285612ccf565b602082019150612d238284612cf0565b6020820191508190509392505050565b7f496e76616c696420766f74652072657665616c00000000000000000000000000600082015250565b6000612d6960138361227f565b9150612d7482612d33565b602082019050919050565b60006020820190508181036000830152612d9881612d5c565b9050919050565b7f496e76616c696420636f6d6d69746d656e740000000000000000000000000000600082015250565b6000612dd560128361227f565b9150612de082612d9f565b602082019050919050565b60006020820190508181036000830152612e0481612dc8565b9050919050565b600081905092915050565b6000612e2182612274565b612e2b8185612e0b565b9350612e3b818560208601612290565b80840191505092915050565b7f2c20000000000000000000000000000000000000000000000000000000000000600082015250565b6000612e7d600283612e0b565b9150612e8882612e47565b600282019050919050565b6000612e9f8284612e16565b9150612eaa82612e70565b915081905092915050565b60008154612ec2816127a2565b612ecc8186612e0b565b94506001821660008114612ee75760018114612efc57612f2f565b60ff1983168652811515820286019350612f2f565b612f05856127d3565b60005b83811015612f2757815481890152600182019150602081019050612f08565b838801955050505b50505092915050565b6000612f448285612e16565b9150612f508284612eb5565b91508190509392505050565b7f566f74657220697320616c726561647920726567697374657265640000000000600082015250565b6000612f92601b8361227f565b9150612f9d82612f5c565b602082019050919050565b60006020820190508181036000830152612fc181612f85565b9050919050565b7f566f74696e67206973206e6f7420616374697665000000000000000000000000600082015250565b6000612ffe60148361227f565b915061300982612fc8565b602082019050919050565b6000602082019050818103600083015261302d81612ff1565b9050919050565b7f596f75206d757374206265207265676973746572656420746f20766f74650000600082015250565b600061306a601e8361227f565b915061307582613034565b602082019050919050565b600060208201905081810360008301526130998161305d565b9050919050565b7f596f75206861766520616c726561647920766f74656400000000000000000000600082015250565b60006130d660168361227f565b91506130e1826130a0565b602082019050919050565b60006020820190508181036000830152613105816130c9565b9050919050565b7f436f6d6d69746d656e7420616c72656164792065786973747300000000000000600082015250565b600061314260198361227f565b915061314d8261310c565b602082019050919050565b6000602082019050818103600083015261317181613135565b9050919050565b61318181612139565b82525050565b600060408201905061319c6000830185612265565b6131a96020830184613178565b939250505056fe50726f706f73616c287329207769746820746865206d6f737420766f7465733a20a2646970667358221220f47f76060a9688bef094dd34fe87e2cba34550623f1d63a59fbfc3e63d0f58a864736f6c634300081c0033";

    public static final String FUNC_ADDPROPOSAL = "addProposal";

    public static final String FUNC_BALLOTS = "ballots";

    public static final String FUNC_COMMITVOTE = "commitVote";

    public static final String FUNC_CREATEBALLOT = "createBallot";

    public static final String FUNC_FINALIZERESULT = "finalizeResult";

    public static final String FUNC_GETCOMMITMENT = "getCommitment";

    public static final String FUNC_GETPROPOSAL = "getProposal";

    public static final String FUNC_GETRESULT = "getResult";

    public static final String FUNC_GETVOTECOUNTS = "getVoteCounts";

    public static final String FUNC_GETVOTER = "getVoter";

    public static final String FUNC_NEXTBALLOTID = "nextBallotId";

    public static final String FUNC_REGISTERVOTER = "registerVoter";

    public static final String FUNC_REVEALVOTE = "revealVote";

    public static final String FUNC_TERMINATEVOTING = "terminateVoting";

    public static final Event BALLOTCREATED_EVENT = new Event("BallotCreated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event VOTERECORDED_EVENT = new Event("VoteRecorded", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}, new TypeReference<Bytes32>() {}));
    ;

    @Deprecated
    protected Voting(String contractAddress, Web3j web3j, Credentials credentials,
            BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Voting(String contractAddress, Web3j web3j, Credentials credentials,
            ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Voting(String contractAddress, Web3j web3j, TransactionManager transactionManager,
            BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Voting(String contractAddress, Web3j web3j, TransactionManager transactionManager,
            ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static List<BallotCreatedEventResponse> getBallotCreatedEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(BALLOTCREATED_EVENT, transactionReceipt);
        ArrayList<BallotCreatedEventResponse> responses = new ArrayList<BallotCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            BallotCreatedEventResponse typedResponse = new BallotCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ballotId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.title = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static BallotCreatedEventResponse getBallotCreatedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(BALLOTCREATED_EVENT, log);
        BallotCreatedEventResponse typedResponse = new BallotCreatedEventResponse();
        typedResponse.log = log;
        typedResponse.ballotId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.title = (String) eventValues.getNonIndexedValues().get(1).getValue();
        return typedResponse;
    }

    public Flowable<BallotCreatedEventResponse> ballotCreatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getBallotCreatedEventFromLog(log));
    }

    public Flowable<BallotCreatedEventResponse> ballotCreatedEventFlowable(
            DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(BALLOTCREATED_EVENT));
        return ballotCreatedEventFlowable(filter);
    }

    public static List<VoteRecordedEventResponse> getVoteRecordedEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(VOTERECORDED_EVENT, transactionReceipt);
        ArrayList<VoteRecordedEventResponse> responses = new ArrayList<VoteRecordedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            VoteRecordedEventResponse typedResponse = new VoteRecordedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.voter = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.ballotId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.commitment = (byte[]) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static VoteRecordedEventResponse getVoteRecordedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(VOTERECORDED_EVENT, log);
        VoteRecordedEventResponse typedResponse = new VoteRecordedEventResponse();
        typedResponse.log = log;
        typedResponse.voter = (String) eventValues.getIndexedValues().get(0).getValue();
        typedResponse.ballotId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.commitment = (byte[]) eventValues.getNonIndexedValues().get(1).getValue();
        return typedResponse;
    }

    public Flowable<VoteRecordedEventResponse> voteRecordedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getVoteRecordedEventFromLog(log));
    }

    public Flowable<VoteRecordedEventResponse> voteRecordedEventFlowable(
            DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(VOTERECORDED_EVENT));
        return voteRecordedEventFlowable(filter);
    }

    public RemoteFunctionCall<TransactionReceipt> addProposal(BigInteger _ballotId, String _name) {
        final Function function = new Function(
                FUNC_ADDPROPOSAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_ballotId), 
                new org.web3j.abi.datatypes.Utf8String(_name)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Tuple8<BigInteger, String, BigInteger, BigInteger, Boolean, String, String, BigInteger>> ballots(
            BigInteger param0) {
        final Function function = new Function(FUNC_BALLOTS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Bool>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple8<BigInteger, String, BigInteger, BigInteger, Boolean, String, String, BigInteger>>(function,
                new Callable<Tuple8<BigInteger, String, BigInteger, BigInteger, Boolean, String, String, BigInteger>>() {
                    @Override
                    public Tuple8<BigInteger, String, BigInteger, BigInteger, Boolean, String, String, BigInteger> call(
                            ) throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple8<BigInteger, String, BigInteger, BigInteger, Boolean, String, String, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (Boolean) results.get(4).getValue(), 
                                (String) results.get(5).getValue(), 
                                (String) results.get(6).getValue(), 
                                (BigInteger) results.get(7).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> commitVote(BigInteger _ballotId,
            byte[] _commitment) {
        final Function function = new Function(
                FUNC_COMMITVOTE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_ballotId), 
                new org.web3j.abi.datatypes.generated.Bytes32(_commitment)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> createBallot(String _title, BigInteger _startTime,
            BigInteger _duration, List<String> _proposalNames, List<String> _voters) {
        final Function function = new Function(
                FUNC_CREATEBALLOT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_title), 
                new org.web3j.abi.datatypes.generated.Uint256(_startTime), 
                new org.web3j.abi.datatypes.generated.Uint256(_duration), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
                        org.web3j.abi.datatypes.Utf8String.class,
                        org.web3j.abi.Utils.typeMap(_proposalNames, org.web3j.abi.datatypes.Utf8String.class)), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Address>(
                        org.web3j.abi.datatypes.Address.class,
                        org.web3j.abi.Utils.typeMap(_voters, org.web3j.abi.datatypes.Address.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> finalizeResult(BigInteger _ballotId) {
        final Function function = new Function(
                FUNC_FINALIZERESULT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_ballotId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> getCommitment(BigInteger _ballotId, byte[] _commitment) {
        final Function function = new Function(FUNC_GETCOMMITMENT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_ballotId), 
                new org.web3j.abi.datatypes.generated.Bytes32(_commitment)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Proposal> getProposal(BigInteger _ballotId, BigInteger _proposalId) {
        final Function function = new Function(FUNC_GETPROPOSAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_ballotId), 
                new org.web3j.abi.datatypes.generated.Uint256(_proposalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Proposal>() {}));
        return executeRemoteCallSingleValueReturn(function, Proposal.class);
    }

    public RemoteFunctionCall<String> getResult(BigInteger _ballotId) {
        final Function function = new Function(FUNC_GETRESULT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_ballotId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<List> getVoteCounts(BigInteger _ballotId) {
        final Function function = new Function(FUNC_GETVOTECOUNTS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_ballotId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Uint256>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<Voter> getVoter(BigInteger _ballotId, String _voterAddress) {
        final Function function = new Function(FUNC_GETVOTER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_ballotId), 
                new org.web3j.abi.datatypes.Address(160, _voterAddress)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Voter>() {}));
        return executeRemoteCallSingleValueReturn(function, Voter.class);
    }

    public RemoteFunctionCall<BigInteger> nextBallotId() {
        final Function function = new Function(FUNC_NEXTBALLOTID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> registerVoter(BigInteger _ballotId,
            String voter) {
        final Function function = new Function(
                FUNC_REGISTERVOTER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_ballotId), 
                new org.web3j.abi.datatypes.Address(160, voter)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> revealVote(BigInteger _ballotId,
            BigInteger _proposalId, byte[] _salt) {
        final Function function = new Function(
                FUNC_REVEALVOTE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_ballotId), 
                new org.web3j.abi.datatypes.generated.Uint256(_proposalId), 
                new org.web3j.abi.datatypes.generated.Bytes32(_salt)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> terminateVoting(BigInteger _ballotId) {
        final Function function = new Function(
                FUNC_TERMINATEVOTING, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_ballotId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static Voting load(String contractAddress, Web3j web3j, Credentials credentials,
            BigInteger gasPrice, BigInteger gasLimit) {
        return new Voting(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Voting load(String contractAddress, Web3j web3j,
            TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Voting(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Voting load(String contractAddress, Web3j web3j, Credentials credentials,
            ContractGasProvider contractGasProvider) {
        return new Voting(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Voting load(String contractAddress, Web3j web3j,
            TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Voting(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Voting> deploy(Web3j web3j, Credentials credentials,
            ContractGasProvider contractGasProvider, String _title, BigInteger _startTime,
            BigInteger _duration) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_title), 
                new org.web3j.abi.datatypes.generated.Uint256(_startTime), 
                new org.web3j.abi.datatypes.generated.Uint256(_duration)));
        return deployRemoteCall(Voting.class, web3j, credentials, contractGasProvider, getDeploymentBinary(), encodedConstructor);
    }

    public static RemoteCall<Voting> deploy(Web3j web3j, TransactionManager transactionManager,
            ContractGasProvider contractGasProvider, String _title, BigInteger _startTime,
            BigInteger _duration) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_title), 
                new org.web3j.abi.datatypes.generated.Uint256(_startTime), 
                new org.web3j.abi.datatypes.generated.Uint256(_duration)));
        return deployRemoteCall(Voting.class, web3j, transactionManager, contractGasProvider, getDeploymentBinary(), encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<Voting> deploy(Web3j web3j, Credentials credentials,
            BigInteger gasPrice, BigInteger gasLimit, String _title, BigInteger _startTime,
            BigInteger _duration) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_title), 
                new org.web3j.abi.datatypes.generated.Uint256(_startTime), 
                new org.web3j.abi.datatypes.generated.Uint256(_duration)));
        return deployRemoteCall(Voting.class, web3j, credentials, gasPrice, gasLimit, getDeploymentBinary(), encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<Voting> deploy(Web3j web3j, TransactionManager transactionManager,
            BigInteger gasPrice, BigInteger gasLimit, String _title, BigInteger _startTime,
            BigInteger _duration) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_title), 
                new org.web3j.abi.datatypes.generated.Uint256(_startTime), 
                new org.web3j.abi.datatypes.generated.Uint256(_duration)));
        return deployRemoteCall(Voting.class, web3j, transactionManager, gasPrice, gasLimit, getDeploymentBinary(), encodedConstructor);
    }

    private static String getDeploymentBinary() {
        return BINARY;
    }

    public static class Proposal extends DynamicStruct {
        public BigInteger index;

        public String name;

        public BigInteger voteCount;

        public Proposal(BigInteger index, String name, BigInteger voteCount) {
            super(new org.web3j.abi.datatypes.generated.Uint256(index), 
                    new org.web3j.abi.datatypes.Utf8String(name), 
                    new org.web3j.abi.datatypes.generated.Uint256(voteCount));
            this.index = index;
            this.name = name;
            this.voteCount = voteCount;
        }

        public Proposal(Uint256 index, Utf8String name, Uint256 voteCount) {
            super(index, name, voteCount);
            this.index = index.getValue();
            this.name = name.getValue();
            this.voteCount = voteCount.getValue();
        }
    }

    public static class Voter extends StaticStruct {
        public Boolean isRegistered;

        public Boolean hasVoted;

        public BigInteger vote;

        public byte[] voteHash;

        public Voter(Boolean isRegistered, Boolean hasVoted, BigInteger vote, byte[] voteHash) {
            super(new org.web3j.abi.datatypes.Bool(isRegistered), 
                    new org.web3j.abi.datatypes.Bool(hasVoted), 
                    new org.web3j.abi.datatypes.generated.Uint256(vote), 
                    new org.web3j.abi.datatypes.generated.Bytes32(voteHash));
            this.isRegistered = isRegistered;
            this.hasVoted = hasVoted;
            this.vote = vote;
            this.voteHash = voteHash;
        }

        public Voter(Bool isRegistered, Bool hasVoted, Uint256 vote, Bytes32 voteHash) {
            super(isRegistered, hasVoted, vote, voteHash);
            this.isRegistered = isRegistered.getValue();
            this.hasVoted = hasVoted.getValue();
            this.vote = vote.getValue();
            this.voteHash = voteHash.getValue();
        }
    }

    public static class BallotCreatedEventResponse extends BaseEventResponse {
        public BigInteger ballotId;

        public String title;
    }

    public static class VoteRecordedEventResponse extends BaseEventResponse {
        public String voter;

        public BigInteger ballotId;

        public byte[] commitment;
    }
}
