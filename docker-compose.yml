services:
  react-app:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    env_file:
      - ./frontend/.env
    environment:
      - VITE_API_BASE_URL=http://spring-boot-app:8080/api/v1
    depends_on:
      spring-boot-app:
        condition: service_started
    networks:
      - app

  spring-boot-app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - ./backend/.env
    environment:
      # - SPRING_DATASOURCE_URL=jdbc:postgresql://blockchain-voting-db:5432/postgres?sslmode=require
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
      # - SPRING_DATASOURCE_USERNAME=admin_
      # - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - SPRING_DATASOURCE_USERNAME=william
      - SPRING_DATASOURCE_PASSWORD=william
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app

  db:
    image: postgres:14
    env_file:
      - ./backend/.env
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - "5332:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U william -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app

networks:
  app:
    driver: bridge

volumes:
  db: