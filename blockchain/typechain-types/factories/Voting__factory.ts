/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Voting, VotingInterface } from "../Voting";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "electionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
    ],
    name: "ElectionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "electionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalIndex",
        type: "uint256",
      },
    ],
    name: "VoteRecorded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_electionId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "addProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "createElection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "elections",
    outputs: [
      {
        internalType: "uint256",
        name: "electionId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "terminated",
        type: "bool",
      },
      {
        internalType: "string",
        name: "result",
        type: "string",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "proposalCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_electionId",
        type: "uint256",
      },
    ],
    name: "finalizeResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_electionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
    ],
    name: "getProposal",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "voteCount",
            type: "uint256",
          },
        ],
        internalType: "struct Voting.Proposal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_electionId",
        type: "uint256",
      },
    ],
    name: "getResult",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_electionId",
        type: "uint256",
      },
    ],
    name: "getVoteCounts",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_electionId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_voterAddress",
        type: "address",
      },
    ],
    name: "getVoter",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isRegistered",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasVoted",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "vote",
            type: "uint256",
          },
        ],
        internalType: "struct Voting.Voter",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextElectionId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_electionId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "registerVoter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_electionId",
        type: "uint256",
      },
    ],
    name: "terminateVoting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_electionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051612bb8380380612bb8833981810160405281019061003291906102fa565b6001808190555060008060006001548152602001908152602001600020905060015481600001819055508381600101908161006d9190610580565b5082816002018190555081816003018190555060008160040160006101000a81548160ff021916908315150217905550604051806020016040528060008152508160050190816100bd9190610580565b50338160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600081600901819055507f52be7c4e77b4de76b7607d621492061fe13b58597e72dfb5e51ab8f6187ed1416001548560405161013e9291906106ab565b60405180910390a1505050506106db565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6101b68261016d565b810181811067ffffffffffffffff821117156101d5576101d461017e565b5b80604052505050565b60006101e861014f565b90506101f482826101ad565b919050565b600067ffffffffffffffff8211156102145761021361017e565b5b61021d8261016d565b9050602081019050919050565b60005b8381101561024857808201518184015260208101905061022d565b60008484015250505050565b6000610267610262846101f9565b6101de565b90508281526020810184848401111561028357610282610168565b5b61028e84828561022a565b509392505050565b600082601f8301126102ab576102aa610163565b5b81516102bb848260208601610254565b91505092915050565b6000819050919050565b6102d7816102c4565b81146102e257600080fd5b50565b6000815190506102f4816102ce565b92915050565b60008060006060848603121561031357610312610159565b5b600084015167ffffffffffffffff8111156103315761033061015e565b5b61033d86828701610296565b935050602061034e868287016102e5565b925050604061035f868287016102e5565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806103bb57607f821691505b6020821081036103ce576103cd610374565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026104367fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826103f9565b61044086836103f9565b95508019841693508086168417925050509392505050565b6000819050919050565b600061047d610478610473846102c4565b610458565b6102c4565b9050919050565b6000819050919050565b61049783610462565b6104ab6104a382610484565b848454610406565b825550505050565b600090565b6104c06104b3565b6104cb81848461048e565b505050565b5b818110156104ef576104e46000826104b8565b6001810190506104d1565b5050565b601f82111561053457610505816103d4565b61050e846103e9565b8101602085101561051d578190505b610531610529856103e9565b8301826104d0565b50505b505050565b600082821c905092915050565b600061055760001984600802610539565b1980831691505092915050565b60006105708383610546565b9150826002028217905092915050565b61058982610369565b67ffffffffffffffff8111156105a2576105a161017e565b5b6105ac82546103a3565b6105b78282856104f3565b600060209050601f8311600181146105ea57600084156105d8578287015190505b6105e28582610564565b86555061064a565b601f1984166105f8866103d4565b60005b82811015610620578489015182556001820191506020850194506020810190506105fb565b8683101561063d5784890151610639601f891682610546565b8355505b6001600288020188555050505b505050505050565b61065b816102c4565b82525050565b600082825260208201905092915050565b600061067d82610369565b6106878185610661565b935061069781856020860161022a565b6106a08161016d565b840191505092915050565b60006040820190506106c06000830185610652565b81810360208301526106d28184610672565b90509392505050565b6124ce806106ea6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806394c790bb1161007157806394c790bb146101a6578063995e4339146101c2578063aba21009146101f2578063b384abef14610222578063d3c9a7411461023e578063f49a7a171461025a576100b4565b8063051097ef146100b95780632ec7d5ae146100d55780635313837b146100f15780635e6fef011461010f5780638a241f4c146101465780638f47b14614610176575b600080fd5b6100d360048036038101906100ce91906117a2565b610276565b005b6100ef60048036038101906100ea91906117fe565b610439565b005b6100f9610723565b604051610106919061183a565b60405180910390f35b610129600480360381019061012491906117fe565b610729565b60405161013d989796959493929190611930565b60405180910390f35b610160600480360381019061015b91906117fe565b6108ae565b60405161016d9190611a7a565b60405180910390f35b610190600480360381019061018b9190611ac8565b610a57565b60405161019d9190611b59565b60405180910390f35b6101c060048036038101906101bb9190611ac8565b610b04565b005b6101dc60048036038101906101d791906117fe565b610de6565b6040516101e99190611b74565b60405180910390f35b61020c60048036038101906102079190611b96565b610f61565b6040516102199190611c70565b60405180910390f35b61023c60048036038101906102379190611b96565b611048565b005b610258600480360381019061025391906117fe565b6113cd565b005b610274600480360381019061026f9190611c92565b6114a3565b005b8160008082815260200190815260200160002060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461031a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031190611d73565b60405180910390fd5b826000806000838152602001908152602001600020905080600201544210610377576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036e90611ddf565b60405180910390fd5b600080600087815260200190815260200160002090506000806000888152602001908152602001600020600901549050604051806060016040528082815260200187815260200160008152506000808981526020019081526020016000206008016000838152602001908152602001600020600082015181600001556020820151816001019081610408919061200b565b506040820151816002015590505081600901600081548092919061042b9061210c565b919050555050505050505050565b8060008082815260200190815260200160002060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d490611d73565b60405180910390fd5b8160008060008381526020019081526020016000209050806003015481600201546105089190612154565b42101561054a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610541906121d4565b60405180910390fd5b8360008082815260200190815260200160002060040160009054906101000a900460ff16156105ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a590612240565b60405180910390fd5b606060008080600089815260200190815260200160002060090154905060005b818110156106f557826000808b815260200190815260200160002060080160008381526020019081526020016000206002015411156106e8576000808a815260200190815260200160002060080160008281526020019081526020016000206002015492506000808a81526020019081526020016000206008016000828152602001908152602001600020600101805461066790611e2e565b80601f016020809104026020016040519081016040528092919081815260200182805461069390611e2e565b80156106e05780601f106106b5576101008083540402835291602001916106e0565b820191906000526020600020905b8154815290600101906020018083116106c357829003601f168201915b505050505093505b80806001019150506105ce565b50826000808a81526020019081526020016000206005019081610718919061200b565b505050505050505050565b60015481565b600060205280600052604060002060009150905080600001549080600101805461075290611e2e565b80601f016020809104026020016040519081016040528092919081815260200182805461077e90611e2e565b80156107cb5780601f106107a0576101008083540402835291602001916107cb565b820191906000526020600020905b8154815290600101906020018083116107ae57829003601f168201915b5050505050908060020154908060030154908060040160009054906101000a900460ff16908060050180546107ff90611e2e565b80601f016020809104026020016040519081016040528092919081815260200182805461082b90611e2e565b80156108785780601f1061084d57610100808354040283529160200191610878565b820191906000526020600020905b81548152906001019060200180831161085b57829003601f168201915b5050505050908060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060090154905088565b60608160008060008381526020019081526020016000209050806003015481600201546108db9190612154565b42101561091d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610914906121d4565b60405180910390fd5b8360008082815260200190815260200160002060040160009054906101000a900460ff1615610981576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097890612240565b60405180910390fd5b600080600087815260200190815260200160002060090154905060008167ffffffffffffffff8111156109b7576109b6611677565b5b6040519080825280602002602001820160405280156109e55781602001602082028036833780820191505090505b50905060005b82811015610a4957600080898152602001908152602001600020600801600082815260200190815260200160002060020154828281518110610a3057610a2f612260565b5b60200260200101818152505080806001019150506109eb565b508095505050505050919050565b610a5f6115cc565b60008084815260200190815260200160002060070160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff16151515158152602001600182015481525050905092915050565b8160008082815260200190815260200160002060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ba8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9f90611d73565b60405180910390fd5b826000806000838152602001908152602001600020905080600201544210610c05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bfc90611ddf565b60405180910390fd5b60008086815260200190815260200160002060070160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615610ca8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9f906122db565b60405180910390fd5b600160008087815260200190815260200160002060070160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908315150217905550600080600087815260200190815260200160002060070160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff021916908315150217905550600080600087815260200190815260200160002060070160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505050505050565b6060816000806000838152602001908152602001600020905080600301548160020154610e139190612154565b421015610e55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4c906121d4565b60405180910390fd5b8360008082815260200190815260200160002060040160009054906101000a900460ff1615610eb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb090612240565b60405180910390fd5b6000808681526020019081526020016000206005018054610ed990611e2e565b80601f0160208091040260200160405190810160405280929190818152602001828054610f0590611e2e565b8015610f525780601f10610f2757610100808354040283529160200191610f52565b820191906000526020600020905b815481529060010190602001808311610f3557829003601f168201915b50505050509350505050919050565b610f696115f1565b600080848152602001908152602001600020600801600083815260200190815260200160002060405180606001604052908160008201548152602001600182018054610fb490611e2e565b80601f0160208091040260200160405190810160405280929190818152602001828054610fe090611e2e565b801561102d5780601f106110025761010080835404028352916020019161102d565b820191906000526020600020905b81548152906001019060200180831161101057829003601f168201915b50505050508152602001600282015481525050905092915050565b8160008060008381526020019081526020016000209050806002015442101580156110855750806003015481600201546110829190612154565b42105b6110c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110bb90612347565b60405180910390fd5b8360008082815260200190815260200160002060040160009054906101000a900460ff1615611128576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111f90612240565b60405180910390fd5b60008086815260200190815260200160002060070160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166111ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c1906123b3565b60405180910390fd5b60008086815260200190815260200160002060070160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff161561126d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112649061241f565b60405180910390fd5b600160008087815260200190815260200160002060070160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff0219169083151502179055508360008087815260200190815260200160002060070160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555060016000808781526020019081526020016000206008016000868152602001908152602001600020600201600082825461136f9190612154565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f30befe21dd895620c3a73403f6e63aea5c3c6729202dbdc8eef2e8f8bd78de8086866040516113be92919061243f565b60405180910390a25050505050565b8060008082815260200190815260200160002060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611471576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146890611d73565b60405180910390fd5b600160008084815260200190815260200160002060040160006101000a81548160ff0219169083151502179055505050565b6000600160008154809291906114b89061210c565b91905055905060008060008381526020019081526020016000209050818160000181905550848160010190816114ee919061200b565b5083816002018190555082816003018190555060008160040160006101000a81548160ff0219169083151502179055506040518060200160405280600081525081600501908161153e919061200b565b50338160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600081600901819055507f52be7c4e77b4de76b7607d621492061fe13b58597e72dfb5e51ab8f6187ed14182866040516115bd929190612468565b60405180910390a15050505050565b6040518060600160405280600015158152602001600015158152602001600081525090565b60405180606001604052806000815260200160608152602001600081525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61163981611626565b811461164457600080fd5b50565b60008135905061165681611630565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6116af82611666565b810181811067ffffffffffffffff821117156116ce576116cd611677565b5b80604052505050565b60006116e1611612565b90506116ed82826116a6565b919050565b600067ffffffffffffffff82111561170d5761170c611677565b5b61171682611666565b9050602081019050919050565b82818337600083830152505050565b6000611745611740846116f2565b6116d7565b90508281526020810184848401111561176157611760611661565b5b61176c848285611723565b509392505050565b600082601f8301126117895761178861165c565b5b8135611799848260208601611732565b91505092915050565b600080604083850312156117b9576117b861161c565b5b60006117c785828601611647565b925050602083013567ffffffffffffffff8111156117e8576117e7611621565b5b6117f485828601611774565b9150509250929050565b6000602082840312156118145761181361161c565b5b600061182284828501611647565b91505092915050565b61183481611626565b82525050565b600060208201905061184f600083018461182b565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561188f578082015181840152602081019050611874565b60008484015250505050565b60006118a682611855565b6118b08185611860565b93506118c0818560208601611871565b6118c981611666565b840191505092915050565b60008115159050919050565b6118e9816118d4565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061191a826118ef565b9050919050565b61192a8161190f565b82525050565b600061010082019050611946600083018b61182b565b8181036020830152611958818a61189b565b9050611967604083018961182b565b611974606083018861182b565b61198160808301876118e0565b81810360a0830152611993818661189b565b90506119a260c0830185611921565b6119af60e083018461182b565b9998505050505050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6119f181611626565b82525050565b6000611a0383836119e8565b60208301905092915050565b6000602082019050919050565b6000611a27826119bc565b611a3181856119c7565b9350611a3c836119d8565b8060005b83811015611a6d578151611a5488826119f7565b9750611a5f83611a0f565b925050600181019050611a40565b5085935050505092915050565b60006020820190508181036000830152611a948184611a1c565b905092915050565b611aa58161190f565b8114611ab057600080fd5b50565b600081359050611ac281611a9c565b92915050565b60008060408385031215611adf57611ade61161c565b5b6000611aed85828601611647565b9250506020611afe85828601611ab3565b9150509250929050565b611b11816118d4565b82525050565b606082016000820151611b2d6000850182611b08565b506020820151611b406020850182611b08565b506040820151611b5360408501826119e8565b50505050565b6000606082019050611b6e6000830184611b17565b92915050565b60006020820190508181036000830152611b8e818461189b565b905092915050565b60008060408385031215611bad57611bac61161c565b5b6000611bbb85828601611647565b9250506020611bcc85828601611647565b9150509250929050565b600082825260208201905092915050565b6000611bf282611855565b611bfc8185611bd6565b9350611c0c818560208601611871565b611c1581611666565b840191505092915050565b6000606083016000830151611c3860008601826119e8565b5060208301518482036020860152611c508282611be7565b9150506040830151611c6560408601826119e8565b508091505092915050565b60006020820190508181036000830152611c8a8184611c20565b905092915050565b600080600060608486031215611cab57611caa61161c565b5b600084013567ffffffffffffffff811115611cc957611cc8611621565b5b611cd586828701611774565b9350506020611ce686828701611647565b9250506040611cf786828701611647565b9150509250925092565b7f4f6e6c792061646d696e2063616e20706572666f726d2074686973206163746960008201527f6f6e000000000000000000000000000000000000000000000000000000000000602082015250565b6000611d5d602283611860565b9150611d6882611d01565b604082019050919050565b60006020820190508181036000830152611d8c81611d50565b9050919050565b7f566f74696e672068617320616c72656164792073746172746564000000000000600082015250565b6000611dc9601a83611860565b9150611dd482611d93565b602082019050919050565b60006020820190508181036000830152611df881611dbc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611e4657607f821691505b602082108103611e5957611e58611dff565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611ec17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611e84565b611ecb8683611e84565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611f08611f03611efe84611626565b611ee3565b611626565b9050919050565b6000819050919050565b611f2283611eed565b611f36611f2e82611f0f565b848454611e91565b825550505050565b600090565b611f4b611f3e565b611f56818484611f19565b505050565b5b81811015611f7a57611f6f600082611f43565b600181019050611f5c565b5050565b601f821115611fbf57611f9081611e5f565b611f9984611e74565b81016020851015611fa8578190505b611fbc611fb485611e74565b830182611f5b565b50505b505050565b600082821c905092915050565b6000611fe260001984600802611fc4565b1980831691505092915050565b6000611ffb8383611fd1565b9150826002028217905092915050565b61201482611855565b67ffffffffffffffff81111561202d5761202c611677565b5b6120378254611e2e565b612042828285611f7e565b600060209050601f8311600181146120755760008415612063578287015190505b61206d8582611fef565b8655506120d5565b601f19841661208386611e5f565b60005b828110156120ab57848901518255600182019150602085019450602081019050612086565b868310156120c857848901516120c4601f891682611fd1565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061211782611626565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612149576121486120dd565b5b600182019050919050565b600061215f82611626565b915061216a83611626565b9250828201905080821115612182576121816120dd565b5b92915050565b7f566f74696e6720706572696f6420686173206e6f7420656e6465642079657400600082015250565b60006121be601f83611860565b91506121c982612188565b602082019050919050565b600060208201905081810360008301526121ed816121b1565b9050919050565b7f566f74696e67206973207465726d696e61746564000000000000000000000000600082015250565b600061222a601483611860565b9150612235826121f4565b602082019050919050565b600060208201905081810360008301526122598161221d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f566f74657220697320616c726561647920726567697374657265640000000000600082015250565b60006122c5601b83611860565b91506122d08261228f565b602082019050919050565b600060208201905081810360008301526122f4816122b8565b9050919050565b7f566f74696e67206973206e6f7420616374697665000000000000000000000000600082015250565b6000612331601483611860565b915061233c826122fb565b602082019050919050565b6000602082019050818103600083015261236081612324565b9050919050565b7f596f75206d757374206265207265676973746572656420746f20766f74650000600082015250565b600061239d601e83611860565b91506123a882612367565b602082019050919050565b600060208201905081810360008301526123cc81612390565b9050919050565b7f596f75206861766520616c726561647920766f74656400000000000000000000600082015250565b6000612409601683611860565b9150612414826123d3565b602082019050919050565b60006020820190508181036000830152612438816123fc565b9050919050565b6000604082019050612454600083018561182b565b612461602083018461182b565b9392505050565b600060408201905061247d600083018561182b565b818103602083015261248f818461189b565b9050939250505056fea264697066735822122026bc581a1b537aa3bfa23b0d4dd000a47adce72052fd7ea18da248ceb76920bb64736f6c634300081c0033";

type VotingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Voting__factory extends ContractFactory {
  constructor(...args: VotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _title: string,
    _startTime: BigNumberish,
    _duration: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _title,
      _startTime,
      _duration,
      overrides || {}
    );
  }
  override deploy(
    _title: string,
    _startTime: BigNumberish,
    _duration: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _title,
      _startTime,
      _duration,
      overrides || {}
    ) as Promise<
      Voting & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Voting__factory {
    return super.connect(runner) as Voting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingInterface {
    return new Interface(_abi) as VotingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Voting {
    return new Contract(address, _abi, runner) as unknown as Voting;
  }
}
